#!/bin/bash

# SILK - Smart Integrated Literary Kit v1.0
# Structured Intelligence for Literary Kreation
# Modern CLI workflow for authors with LLM integration
# Compatible: Git Bash (Windows), Linux, macOS, WSL

set -euo pipefail

# === CONFIGURATION GLOBALE ===
SILK_VERSION="1.0.0"
SILK_HOME="${SILK_HOME:-$HOME/.silk}"
SILK_CONFIG="$SILK_HOME/config"
VAULT_MARKER="## manuscrit"

# === COULEURS ===
if [[ -t 1 ]]; then
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    BLUE='\033[0;34m'
    PURPLE='\033[0;35m'
    CYAN='\033[0;36m'
    NC='\033[0m'
else
    RED='' GREEN='' YELLOW='' BLUE='' PURPLE='' CYAN='' NC=''
fi

# === FONCTIONS UTILITAIRES ===
log_info() { echo -e "${BLUE}[INFO] $1${NC}"; }
log_success() { echo -e "${GREEN}[OK] $1${NC}"; }
log_warning() { echo -e "${YELLOW}[WARN] $1${NC}"; }
log_error() { echo -e "${RED}[ERROR] $1${NC}"; }
log_header() { echo -e "${PURPLE}[SILK] $1${NC}"; }

detect_os() {
    case "$OSTYPE" in
        msys*|cygwin*|mingw*) echo "windows" ;;
        darwin*) echo "macos" ;;
        linux*) echo "linux" ;;
        *) echo "unknown" ;;
    esac
}

is_silk_project() {
    [[ -d "01-Manuscrit" && -d "02-Personnages" && -d "04-Concepts" ]]
}

find_silk_root() {
    local current_dir="$PWD"
    while [[ "$current_dir" != "/" ]]; do
        if [[ -d "$current_dir/01-Manuscrit" ]]; then
            echo "$current_dir"
            return 0
        fi
        current_dir="$(dirname "$current_dir")"
    done
    return 1
}

ensure_silk_context() {
    if ! is_silk_project; then
        local silk_root
        if silk_root=$(find_silk_root); then
            log_info "Projet SILK trouve dans: $silk_root"
            cd "$silk_root"
        else
            log_error "Pas dans un projet SILK. Utilisez 'silk init' pour creer un projet."
            exit 1
        fi
    fi
}

# === GESTION CONFIGURATION ===
load_config() {
    mkdir -p "$SILK_HOME"
    if [[ -f "$SILK_CONFIG" ]]; then
        source "$SILK_CONFIG"
    fi

    # Valeurs par défaut
    SILK_DEFAULT_GENRE="${SILK_DEFAULT_GENRE:-polar-psychologique}"
    SILK_DEFAULT_LANGUAGE="${SILK_DEFAULT_LANGUAGE:-fr}"
    SILK_DEFAULT_TARGET_WORDS="${SILK_DEFAULT_TARGET_WORDS:-80000}"
    SILK_DEFAULT_CHAPTERS="${SILK_DEFAULT_CHAPTERS:-30}"
    SILK_DEFAULT_FORMAT="${SILK_DEFAULT_FORMAT:-digital}"
    SILK_AUTHOR_NAME="${SILK_AUTHOR_NAME:-}"
    SILK_AUTHOR_PSEUDO="${SILK_AUTHOR_PSEUDO:-}"
}

save_config() {
    cat > "$SILK_CONFIG" << 'CONFIG_EOF'
# SILK Configuration - Smart Integrated Literary Kit
SILK_DEFAULT_GENRE="${SILK_DEFAULT_GENRE:-polar-psychologique}"
SILK_DEFAULT_LANGUAGE="${SILK_DEFAULT_LANGUAGE:-fr}"
SILK_DEFAULT_TARGET_WORDS="${SILK_DEFAULT_TARGET_WORDS:-80000}"
SILK_DEFAULT_CHAPTERS="${SILK_DEFAULT_CHAPTERS:-30}"
SILK_DEFAULT_FORMAT="${SILK_DEFAULT_FORMAT:-digital}"
SILK_AUTHOR_NAME="${SILK_AUTHOR_NAME:-}"
SILK_AUTHOR_PSEUDO="${SILK_AUTHOR_PSEUDO:-}"
CONFIG_EOF
}

# === COMMANDE VERSION ===
cmd_version() {
    echo "SILK v$SILK_VERSION"
    echo "Smart Integrated Literary Kit"
    echo "Structured Intelligence for Literary Kreation"
    return 0
}

# === COMMANDE CONFIG ===
cmd_config() {
    load_config

    case "${1:-list}" in
        --list|list)
            echo "SILK Configuration"
            echo "=================="
            echo "Genre par defaut        : ${SILK_DEFAULT_GENRE}"
            echo "Langue par defaut       : ${SILK_DEFAULT_LANGUAGE}"
            echo "Objectif mots defaut    : ${SILK_DEFAULT_TARGET_WORDS}"
            echo "Chapitres par defaut    : ${SILK_DEFAULT_CHAPTERS}"
            echo "Format par defaut       : ${SILK_DEFAULT_FORMAT}"
            echo "Nom auteur              : ${SILK_AUTHOR_NAME:-non defini}"
            echo "Pseudonyme auteur       : ${SILK_AUTHOR_PSEUDO:-non defini}"
            echo ""
            echo "Fichier config          : $SILK_CONFIG"
            ;;
        --set)
            if [[ $# -lt 2 ]] || [[ "$2" != *"="* ]]; then
                log_error "Format: silk config --set KEY=VALUE"
                return 1
            fi
            local key="${2%%=*}"
            local value="${2#*=}"

            case "$key" in
                SILK_AUTHOR_NAME) SILK_AUTHOR_NAME="$value" ;;
                SILK_DEFAULT_GENRE) SILK_DEFAULT_GENRE="$value" ;;
                SILK_DEFAULT_TARGET_WORDS) SILK_DEFAULT_TARGET_WORDS="$value" ;;
                *) log_error "Cle inconnue: $key"; return 1 ;;
            esac

            save_config
            log_success "Configuration mise a jour: $key=$value"
            ;;
        --get)
            if [[ $# -lt 2 ]]; then
                log_error "Format: silk config --get KEY"
                return 1
            fi
            case "$2" in
                SILK_AUTHOR_NAME) echo "$SILK_AUTHOR_NAME" ;;
                SILK_DEFAULT_GENRE) echo "$SILK_DEFAULT_GENRE" ;;
                SILK_DEFAULT_TARGET_WORDS) echo "$SILK_DEFAULT_TARGET_WORDS" ;;
                *) log_error "Cle inconnue: $2"; return 1 ;;
            esac
            ;;
        --help|-h)
            show_config_help
            ;;
        *)
            log_error "Option inconnue: $1"
            show_config_help
            return 1
            ;;
    esac
}

show_config_help() {
    cat << 'HELP_EOF'
SILK CONFIG - Configuration globale

USAGE:
  silk config [OPTIONS]

OPTIONS:
  --list                    Afficher toute la configuration (defaut)
  --set KEY=VALUE          Definir une configuration
  --get KEY                Afficher une configuration
  -h, --help               Afficher cette aide

EXEMPLES:
  silk config --list
  silk config --set SILK_AUTHOR_NAME="Jean Dupont"
  silk config --get SILK_DEFAULT_GENRE

CLES DISPONIBLES:
  SILK_AUTHOR_NAME         Nom de l'auteur
  SILK_DEFAULT_GENRE       Genre par defaut (polar-psychologique, fantasy, etc.)
  SILK_DEFAULT_TARGET_WORDS Objectif mots par defaut
HELP_EOF
}

# === AIDE GÉNÉRALE ===
show_help() {
    log_header "SILK - Smart Integrated Literary Kit v$SILK_VERSION"
    echo
    echo "CLI unifie pour l'ecriture de romans avec integration LLM"
    echo
    echo "USAGE:"
    echo "  silk COMMAND [OPTIONS]"
    echo
    echo "COMMANDES:"
    echo "  init        Creer un nouveau projet d'ecriture"
    echo "  context     Generer contexte pour LLM (Claude, GPT, etc.)"
    echo "  wordcount   Statistiques progression manuscrit"
    echo "  publish     Generer PDF du manuscrit"
    echo "  config      Configuration globale SILK"
    echo "  version     Afficher version"
    echo
    echo "OPTIONS GLOBALES:"
    echo "  -h, --help  Afficher aide"
    echo
    echo "EXEMPLES:"
    echo "  silk init \"Mon Roman\"              # Nouveau projet"
    echo "  silk context \"Revision ch15\"       # Contexte LLM"
    echo "  silk wordcount 100000              # Stats avec objectif 100k"
    echo "  silk publish -f iphone             # PDF format iPhone"
    echo
    echo "SILK weaves your story together."
}

# === POINT D'ENTRÉE PRINCIPAL ===
main() {
    # Charger configuration au démarrage
    load_config

    # Parse commande principale
    case "${1:-}" in
        version)
            cmd_version
            ;;
        config)
            shift
            cmd_config "$@"
            ;;
        init|context|wordcount|publish)
            log_warning "Commande '$1' pas encore implementee dans cette version de debug"
            log_info "Commandes disponibles: version, config, --help"
            exit 1
            ;;
        -h|--help|help|"")
            show_help
            ;;
        *)
            log_error "Commande inconnue: $1"
            echo "Utilisez 'silk --help' pour voir les commandes disponibles"
            exit 1
            ;;
    esac
}

# Exécution si script appelé directement
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
